dnl Process this file with autoconf to produce a configure script.

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(sweep, 0.0.9-k3)
AM_CONFIG_HEADER(config.h)

AC_ISC_POSIX
AC_PROG_CC
AM_PROG_CC_STDC
AC_HEADER_STDC
AM_PROG_LIBTOOL

PTHREAD_LIBS=error
AC_CHECK_LIB(pthread, pthread_attr_init,
             PTHREAD_LIBS="-lpthread")
if test "x$PTHREAD_LIBS" = xerror; then
        AC_CHECK_LIB(pthreads, pthread_attr_init,
                PTHREAD_LIBS="-lpthreads")
fi
if test "x$PTHREAD_LIBS" = xerror; then
        AC_CHECK_LIB(c_r, pthread_attr_init,
                PTHREAD_LIBS="-lc_r")
fi
if test "x$PTHREAD_LIBS" = xerror; then
        AC_CHECK_FUNC(pthread_attr_init, PTHREAD_LIBS="")
fi
AC_SUBST(PTHREAD_LIBS)

dnl Test for GTK
AM_PATH_GTK(1.2.0, ,
            AC_MSG_ERROR(Cannot find GTK: Is gtk-config in path?),
            "gthread")

dnl stupid hack to get the gthread stuff into the command lines
LIBS="$LIBS $GTK_LIBS"
CFLAGS="$CFLAGS $GTK_CFLAGS"

dnl Test for Audiofile library
AM_PATH_AUDIOFILE(0.1.5,
                  [CFLAGS="$CFLAGS $AUDIOFILE_CFLAGS"
                   LIBS="$LIBS $AUDIOFILE_LIBS"
                   AC_DEFINE(HAVE_LIBAUDIOFILE)])


dnl Test for OSS
AC_CHECK_HEADERS(sys/soundcard.h machine/soundcard.h)
if test "${ac_cv_header_sys_soundcard_h}" = "yes" || \
    test "${ac_cv_header_machine_soundcard_h}" = "yes"; then
    AC_DEFINE(DRIVER_OSS)
fi

dnl Test for Solaris audio
AC_CHECK_HEADERS(sys/audioio.h)
if test "${ac_cv_header_sys_audioio_h}" = "yes"; then
    AC_DEFINE(DRIVER_SOLARIS_AUDIO)
fi

dnl Add the languages which your application supports here.
ALL_LINGUAS="fr hu it de"
AM_GNU_GETTEXT

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale")
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale")
fi

dnl Set PACKAGE_DATA_DIR in config.h.
if test "x${datadir}" = 'x${prefix}/share'; then
  if test "x${prefix}" = "xNONE"; then
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${ac_default_prefix}/share/${PACKAGE}")
  else
    AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${prefix}/share/${PACKAGE}")
  fi
else
  AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${datadir}/${PACKAGE}")
fi

dnl Set PACKAGE_PLUGIN_DIR in Makefiles and config.h.
if test "x${prefix}" = "xNONE"; then
  PACKAGE_PLUGIN_DIR="${ac_default_prefix}/lib/${PACKAGE}/${VERSION}"
else
  PACKAGE_PLUGIN_DIR="${prefix}/lib/${PACKAGE}/${VERSION}"
fi
AC_DEFINE_UNQUOTED(PACKAGE_PLUGIN_DIR, "${PACKAGE_PLUGIN_DIR}")
AC_SUBST(PACKAGE_PLUGIN_DIR)

dnl Set PACKAGE_SOURCE_DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")


dnl Use -Wall if we have gcc.
changequote(,)dnl
if test "x$GCC" = "xyes"; then
  case " $CFLAGS " in
  *[\ \	]-Wall[\ \	]*) ;;
  *) CFLAGS="$CFLAGS -Wall" ;;
  esac
fi
changequote([,])dnl

AC_SUBST(AUDIOFILE_LIB)

AC_OUTPUT([
Makefile
src/Makefile
plugins/Makefile
plugins/echo/Makefile
plugins/normalise/Makefile
plugins/reverse/Makefile
plugins/ladspa/Makefile
doc/Makefile
intl/Makefile
po/Makefile.in
])

